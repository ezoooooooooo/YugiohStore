// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace YugiohCardStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241225225223_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AttackPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefensePoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AttackPoints = 2500,
                            DefensePoints = 2100,
                            Description = "The ultimate wizard in terms of attack and defense.",
                            ImageUrl = "/images/darkMagician.png",
                            Name = "Dark Magician"
                        },
                        new
                        {
                            Id = 2,
                            AttackPoints = 3000,
                            DefensePoints = 2500,
                            Description = "A powerful engine of destruction, virtually invincible.",
                            ImageUrl = "/images/blueEyes.png",
                            Name = "Blue-Eyes White Dragon"
                        },
                        new
                        {
                            Id = 3,
                            AttackPoints = 2400,
                            DefensePoints = 2000,
                            Description = "A ferocious dragon with a deadly attack.",
                            ImageUrl = "/images/redEyes.png",
                            Name = "Red-Eyes Black Dragon"
                        });
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CardId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Password = "123456789",
                            Role = "Admin",
                            Username = "Osama"
                        });
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.HasOne("Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
